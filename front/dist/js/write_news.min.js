function News(){this.progressGroup=$("#progress-group")}News.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload"})},News.prototype.listenUploadFileEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){if(200===e.code){var t=e.data.url;$("#thumbnail-form").val(t)}}})})},News.prototype.listenQiniuUploadFileEvent=function(){var a=this;$("#thumbnail-btn").change(function(){$(".progress-bar").css({width:0});var s=this.files[0];xfzajax.get({url:"/cms/qntoken/",success:function(e){if(200!==e.code)swal({title:e.message,text:"2秒后自动关闭。",timer:2e3,showConfirmButton:!1});else{var t=e.data.token,o=(new Date).getTime()+"."+s.name.split(".")[1],n={fname:o,params:{},mimeType:["image/png","image/jpg","image/gif"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z0};qiniu.upload(s,o,t,n,i).subscribe({next:a.handleFileUploadProgress,error:a.handleFileUploadError,complete:a.handleFileUploadComplete})}}})})},News.prototype.handleFileUploadProgress=function(e){var t=e.total.percent,o=t.toFixed(0)+"%";console.log(t),$("#progress-group").show();var n=$(".progress-bar");n.css({width:t+"%"}),n.text(o)},News.prototype.handleFileUploadError=function(e){console.log(e.message),swal({title:result.message,text:"",timer:2e3,showConfirmButton:!1}),$("#progress-group").hide()},News.prototype.handleFileUploadComplete=function(e){console.log(e),$("#progress-group").hide();var t="http://7xqeu.com1.z0.glb.clouddn.com/"+e.key;$("input[name='thumbnail']").val(t)},News.prototype.listenSubmitEvent=function(){$("#submit-btn").click(function(e){e.preventDefault();var t=$(this).attr("data-news-id"),o=$('input[name="title"]').val(),n=$('select[name="category"]').val(),i=$("input[name='desc']").val(),s=$('input[name="thumbnail"]').val(),a=window.ue.getContent(),r="",l="";l=t?(r="/cms/edit_news/","新闻编辑成功！"):(r="/cms/write_news/","新闻发布成功！"),xfzajax.post({url:r,data:{title:o,category:n,desc:i,thumbnail:s,content:a,pk:t},success:function(e){200===e.code&&swal({title:l,type:"success"},function(){window.location.reload()})}})})},News.prototype.run=function(){var e=this;e.listenUploadFileEvent(),e.initUEditor(),e.listenSubmitEvent()},$(function(){(new News).run(),News.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
