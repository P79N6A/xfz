function NewsCategory(){}NewsCategory.prototype.run=function(){var t=this;t.listenAddCategoryEvent(),t.listenEditCategoryEvent(),t.listenDeleteCategoryEvent()},NewsCategory.prototype.listenAddCategoryEvent=function(){$("#add-btn").click(function(){swal({title:"添加新闻分类",text:"",type:"input",showCancelButton:!0,closeOnConfirm:!1,animation:"slide-from-top",inputPlaceholder:"请输入新闻分类.."},function(t){return!1!==t&&(""===t?(swal.showInputError("内容不能为空！"),!1):void xfzajax.post({url:"/cms/add_news_category/",data:{name:t},success:function(t){200===t.code?window.location.reload():swal({title:t.message,text:"2秒后自动关闭。",timer:2e3,showConfirmButton:!1})}}))})})},NewsCategory.prototype.listenEditCategoryEvent=function(){$(".edit-btn").click(function(){var t=$(this).parent().parent(),e=t.attr("data-pk"),n=t.attr("data-name");swal({title:"修改分类名称",text:"",type:"input",showCancelButton:!0,closeOnConfirm:!1,animation:"slide-from-top",inputPlaceholder:"请输入新的分类名称..",inputValue:n},function(t){return!1!==t&&(""===t?(swal.showInputError("内容不能为空！"),!1):void xfzajax.post({url:"/cms/edit_news_category/",data:{pk:e,name:t},success:function(t){200===t.code?window.location.reload():swal({title:t.message,text:"2秒后自动关闭。",timer:2e3,showConfirmButton:!1})}}))})})},NewsCategory.prototype.listenDeleteCategoryEvent=function(){$(".delete-btn").click(function(){var t=$(this).parent().parent().attr("data-pk");swal({title:"您确定删除吗？",text:"你将无法恢复该分类！",type:"warning",showCancelButton:!0,confirmButtonColor:"#DD6B55",confirmButtonText:"确定删除！",closeOnConfirm:!1},function(){xfzajax.post({url:"/cms/delete_news_category/",data:{pk:t},success:function(t){200===t.code?(swal("删除！","该分类已经被删除。","success"),window.location.reload()):swal({title:t.message,text:"2秒后自动关闭。",timer:2e3,showConfirmButton:!1})}})})})},$(function(){(new NewsCategory).run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
